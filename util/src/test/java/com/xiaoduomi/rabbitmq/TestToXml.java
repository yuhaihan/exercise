package com.xiaoduomi.rabbitmq;

import com.xiaoduomi.bean.xml.Samples;
import com.xiaoduomi.bean.xml.TestXml;
import com.xiaoduomi.fastjson.FastJsonUtils;
import com.xiaoduomi.xml.XmlUtils;
import org.junit.Test;

/**
 * @ClassName: com.xiaoduomi.test.TestJson
 * @Description: TODO
 * @Author: Gavin
 * @Create: 2020-09-27 16:27
 * @Version: 1.0
 * @Copyright: 2018~2020-09-27 16:27 www.clisia.cn. 保留所有权利。
 * 版权所有： 中科空间信息（廊坊）研究院。
 * 注意：本内容仅限于中科空间信息（廊坊）研究院内部传阅，禁止外泄以及用于其他的商业目的。
 */
public class TestToXml {

    @Test
    public  void  test1(){
        String s = "{\n" +
                "\t\"Samples\": {\n" +
                "\t\t\"Img\": [{\n" +
                "\t\t\t\"InputPath\": \"GF1_WFV3_2013070624_L1A0000044512_4200_7_1262_2137\",\n" +
                "\t\t\t\"RegionsOfInterest\": {\n" +
                "\t\t\t\t\"Region\": [{\n" +
                "\t\t\t\t\t\t\"name\": \"水体\",\n" +
                "\t\t\t\t\t\t\"color\": \"0,0,255\",\n" +
                "\t\t\t\t\t\t\"Polygon\": [\n" +
                "\t\t\t\t\t\t\t\"\\n\\t\\t\\t33.76027547 36.21052063 33.75102547 36.20489563 33.77090047 36.20302063 33.76027547 36.21052063\\n\\t\\t\\t\",\n" +
                "\t\t\t\t\t\t\t\"\\n\\t\\t\\t33.78727547 36.21902063 33.78190047 36.21689563 33.78902547 36.21202063 33.79440047 36.21652063 33.78727547 36.21902063\\n\\t\\t\\t\"\n" +
                "\t\t\t\t\t\t]\n" +
                "\t\t\t\t\t},\n" +
                "\t\t\t\t\t{\n" +
                "\t\t\t\t\t\t\"name\": \"植被\",\n" +
                "\t\t\t\t\t\t\"color\": \"0,128,0\",\n" +
                "\t\t\t\t\t\t\"Polygon\": [\n" +
                "\t\t\t\t\t\t\t\"\\n\\t\\t\\t33.73483994 36.25316525 33.73361114 36.25214125 33.73361114 36.25209005 33.73699034 36.25127085 33.73647834 36.25311405 33.73483994 36.25316525\\n\\t\\t\\t\",\n" +
                "\t\t\t\t\t\t\t\"\\n\\t\\t\\t33.73802663 36.25384962 33.73799386 36.25384962 33.73845262 36.25185077 33.73845262 36.251818 33.73999271 36.25178523 33.73999271 36.251818 33.73802663 36.25384962\\n\\t\\t\\t\",\n" +
                "\t\t\t\t\t\t\t\"\\n\\t\\t\\t33.72366639 36.22293381 33.71830063 36.22285189 33.71989807 36.22182789 33.71809583 36.22027141 33.71973423 36.21953413 33.72366639 36.22293381\\n\\t\\t\\t\",\n" +
                "\t\t\t\t\t\t\t\"\\n\\t\\t\\t33.73715452 36.21176475 33.73711356 36.21176475 33.73445116 36.21115035 33.73445116 36.21110939 33.73899772 36.21078171 33.73715452 36.21176475\\n\\t\\t\\t\"\n" +
                "\t\t\t\t\t\t]\n" +
                "\t\t\t\t\t},\n" +
                "\t\t\t\t\t{\n" +
                "\t\t\t\t\t\t\"name\": \"裸地\",\n" +
                "\t\t\t\t\t\t\"color\": \"255,225,0\",\n" +
                "\t\t\t\t\t\t\"Polygon\": [\n" +
                "\t\t\t\t\t\t\t\"\\n\\t\\t\\t33.7436581 36.23167487 33.7381381 36.22983487 33.7419781 36.22847487 33.7457381 36.23015487 33.7436581 36.23167487\\n\\t\\t\\t\",\n" +
                "\t\t\t\t\t\t\t\"\\n\\t\\t\\t33.7526181 36.27255487 33.7489381 36.26975487 33.7489381 36.26967487 33.7515781 36.26815487 33.7516581 36.26815487 33.7526181 36.27255487\\n\\t\\t\\t\",\n" +
                "\t\t\t\t\t\t\t\"\\n\\t\\t\\t33.7138981 36.25031487 33.7140581 36.24831487 33.7120581 36.24711487 33.7148581 36.24615487 33.7148581 36.24623487 33.7138981 36.25031487\\n\\t\\t\\t\",\n" +
                "\t\t\t\t\t\t\t\"\\n\\t\\t\\t33.7314981 36.26359487 33.7290181 36.26255487 33.7290981 36.26239487 33.7294981 36.26231487 33.7334981 36.25983487 33.7335781 36.25983487 33.7314981 36.26359487\\n\\t\\t\\t\",\n" +
                "\t\t\t\t\t\t\t\"\\n\\t\\t\\t33.7823183 36.25456459 33.7826767 36.25405259 33.7908687 36.25604939 33.7901007 36.25671499 33.7823183 36.25456459\\n\\t\\t\\t\"\n" +
                "\t\t\t\t\t\t]\n" +
                "\t\t\t\t\t},\n" +
                "\t\t\t\t\t{\n" +
                "\t\t\t\t\t\t\"name\": \"云\",\n" +
                "\t\t\t\t\t\t\"color\": \"255,0,225\",\n" +
                "\t\t\t\t\t\t\"Polygon\": [\n" +
                "\t\t\t\t\t\t\t\"\\n\\t\\t\\t33.72353662 36.28012442 33.72353662 36.28024942 33.71778662 36.28037442 33.71791162 36.28037442 33.71816162 36.28012442 33.72716162 36.27599942 33.72353662 36.28012442\\n\\t\\t\\t\",\n" +
                "\t\t\t\t\t\t\t\"\\n\\t\\t\\t33.71978662 36.29824943 33.71953662 36.29112442 33.72291162 36.29062442 33.71978662 36.29824943\\n\\t\\t\\t\",\n" +
                "\t\t\t\t\t\t\t\"\\n\\t\\t\\t33.73918154 36.2975618 33.73848154 36.2933618 33.73848154 36.2932618 33.74298154 36.2930618 33.74368154 36.2976618 33.73918154 36.2975618\\n\\t\\t\\t\"\n" +
                "\t\t\t\t\t\t]\n" +
                "\t\t\t\t\t}\n" +
                "\t\t\t\t]\n" +
                "\t\t\t}\n" +
                "\t\t}]\n" +
                "\t}\n" +
                "}";


        TestXml jsonRootBean = FastJsonUtils.toBean(s, TestXml.class);

        System.out.println(jsonRootBean);

        Samples samples = jsonRootBean.getSamples();

        try {

            XmlUtils.bean2xml(samples, "C:\\Users\\yhhus\\Desktop\\test.xml");

        }catch (Exception e){
            e.printStackTrace();
        }


    }

}
